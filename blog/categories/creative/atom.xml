<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: creative | tchikuba's blog]]></title>
  <link href="http://tchikuba.github.io/blog/categories/creative/atom.xml" rel="self"/>
  <link href="http://tchikuba.github.io/"/>
  <updated>2018-10-08T23:21:59+09:00</updated>
  <id>http://tchikuba.github.io/</id>
  <author>
    <name><![CDATA[tchikuba]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[21世紀型のクリエイティブな働き方・思考・組織の新しいあたりまえ]]></title>
    <link href="http://tchikuba.github.io/blog/2015/12/05/life-of-creative-people/"/>
    <updated>2015-12-05T23:06:08+09:00</updated>
    <id>http://tchikuba.github.io/blog/2015/12/05/life-of-creative-people</id>
    <content type="html"><![CDATA[<p><em>この記事は<a href="http://qiita.com/advent-calendar/2015/livesense_2">リブセンスアドベントカレンダー2015(その2)</a>の5日目です。</em></p>

<ul>
<li><em>4日目の記事：<a href="http://qiita.com/ma2saka/items/2cd6cb3a8007fdf9fe2e">Amazon LinuxでPHP7をソースからコンパイルしてSymfony3をMariaDB10</a></em></li>
<li><em>6日目の記事：<a href="http://qiita.com/stackline">stacklineさん</a></em></li>
</ul>


<p>私は現在<a href="https://www.ieshil.com/">IESHIL（イエシル）</a>という中古マンション価格査定サイトのエンジニアやってます。
担当は雑用係です。
リブセンスに入社して約2年半ですがリブセンスでwebサービスの自社開発の文脈に身を置いて色々思うところがあるのでその辺をちょっと言語化してみます。</p>

<h1>プロフィールとバックグラウンド</h1>

<p>私はエンジニアになったのが2004年8月でした。
7年間フリーランスのエンジニアとしてお客さんのところに常駐して作業するという形で、所謂社畜フリーランスでした。
前半4年間は大手SIer、後半3年間はエンタメ系事業会社に常駐していました。</p>

<p>前半の4年間では小さいプロジェクトだったこともあり、ウォーターフォールで言うところの要件定義、基本設計、詳細設計、実装、テスト設計、
単体テスト、結合テスト、受入テスト、リリースなどソフトウェア開発の全工程を担当してエンジニアとしての基礎力を身に着けた時期でした。</p>

<p>後半の3年間では所謂「ステークホルダーと調整して設計書を書くSE」「ベンダーコントロールPM」的な立ち位置で
主に自分が手を動かさず人に手を動かしてもらう為の環境整備的なことをやっていました。
今思い返すと、この時期に所謂プロジェクトマネジメント的なところの基礎力を身に着けた時期だったと思います。</p>

<p>そうこうしているうちにより大きなやりがいと責任ある立場でやれる仕事をしたいと思い、新規事業のプレイングマネージャー的なポジションを探していたところ
あの2011年3月11日が来て、人生短いんだからやりたいと思ったことをやるべきだと踏ん切りがついて前職となるPR会社の新規事業の開発マネージャーとして転職しました。
この時期に要求仕様の変化が激しい新規事業、所謂スタートアップ的な文脈ではウォーターフォール型の開発の行き詰まりを実感し、
アジャイルやリーンな開発(技術開発だけでなく事業開発含め)の手法を模索し貴重な経験をした時期でした。</p>

<p>開発マネージャーとして約2年間働いた後、現職のリブセンスに転職をして現在に至ります。
リブセンスでの強烈なエンジニア文化の中で、エンジニア含めた事業に関わる全ての人が効率の良さと気持ちの良さをどうやったら追求出来るかを最近良く考えます。</p>

<h1>SIerから事業会社の文脈へシフトして感じたビジネスとエンジニアリングの関係性</h1>

<p>自分のキャリアを振り返ってみると受託開発が主であるSIerから徐々に自社サービスを展開する事業会社へとシフトして行ったことになります。
私のキャリアの文脈が徐々にシフトしたのは単なる偶然な気がしますが、この経験があるからこそなのか、最近良く考えていることがあります。
それは、<strong>ビジネスとエンジニアリングは一体不可分である</strong>ということです。</p>

<iframe src="https://docs.google.com/presentation/d/1X3EhINjgf6aDLynMZ3_o0H5XQ7Lca6d1b4hZEUjVz-g/embed?start=false&loop=false&delayms=3000" frameborder="0" width="480" height="299" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe>


<p>ある意味これは最早当たり前の時代になってきたんだと思われますが、私が10年前にいたSIerの文脈だと実感として結構違っていました。
あくまでも受託開発では発注側のお客様がいて請負契約に基づいて予め定義したシステムを納品することが目的です。
出来上がったシステムがお客様が使ってみた結果、それがビジネス上価値を生み出すか否かは短期的には関係がありませんでした。</p>

<p>しかし事業が社内にあり内製出来るエンジニアチームを持っている文脈では事情が異なります。
当然ですが開発を行った結果ビジネス上無価値なものを作ってしまったとしたら基本的にその当事者が作り直す必要があります。
開発と運用が一体となっている文脈では、要件の変化に伴い柔軟にシステムを変更する必要がありまたそれに耐え得る品質を
ソースコード上の保守性、DDD(ドメイン駆動設計)等を用いたビジネスドメイン設計、CI等で担保する必要があります。</p>

<p>これまでの私の経験上、感じていることをまとめると以下の様な図になる気がしています。</p>

<iframe src="https://docs.google.com/presentation/d/1XNnCjrtSZhOxKDazJqrdHVyfvsPZ19o2w_BvszbHIlk/embed?start=false&loop=false&delayms=3000" frameborder="0" width="480" height="299" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true"></iframe>


<p>発注者と受託者という関係では、前者から後者へ金銭的な授受が行われる為、ビジネスパートナーといえど、構造上どうしても主従関係のような強弱がついてしまいます。
当然上手く行っている受託開発も存在しますが、経験上上手く行かないパターンを見ることが少なからずありました。</p>

<p>※ただ最近は一括請負契約の構造上の問題を解決する受託開発の手法の1つとして<a href="/blog/2014/10/20/sonic-garden-kuranuki-book/">「納品のない受託開発」</a>
を手掛ける<a href="http://www.atmarkit.co.jp/ait/articles/1504/27/news001.html">ソニックガーデンさんの事例</a>は注目したいところです。</p>

<p>上記の図に表現した通り、時代の変遷と共にエンジニアリングの比重を相対的に大きくしていますが、これも実感としてあるところです。
昨今のビジネスにおいては「如何にビジネス上の営みをシステムに落とし込むか」という点の比重が徐々に拡大している気がします。
当然ながらビジネス上のシステム化とは、エンジニアリングの観点でのシステム化だけではなく、機械的に出来ることと出来ないことを選別した上で
人手でどこまで行うのか、人をどう配置するのか、関わる人に要求される職能は等、多岐にわたります。
しかしながらそれらの人が業務上関わる場所に全てシステムが介在することもまた事実であり、その範囲は時代を追うごとに拡大していると思うのです。</p>

<p>もっと言えばビジネスに近接する立場にある非エンジニアの日頃の業務にこそ、効率化の余地があることが多いとも感じます。
余談ですが最近日経の記事にコーディング・ブートキャンプの話がありました。</p>

<blockquote class="twitter-tweet" lang="ja"><p lang="ja" dir="ltr">これはマジその通り。特に非エンジニア領域での需要があると実感してる／米で進む大学離れブートキャンプでＩＴの即戦力｜日経カレッジカフェ via <a href="https://twitter.com/hashtag/Kamelio?src=hash">#Kamelio</a> <a href="https://t.co/AsAnCWjYXE">https://t.co/AsAnCWjYXE</a></p>&mdash; Tsutomu Chikuba (@tchikuba) <a href="https://twitter.com/tchikuba/status/672073513377796096">2015, 12月 2</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>この記事から類推するに、非エンジニアが何らかのビジネス上の課題解決の為にコーディングを勉強する需要があるんじゃないかと思います。</p>

<p>いずれにしても現時点で痛感していることをまとめると、
<strong>ビジネス上1つのプロセスでしかなかったシステム化が、ビジネス上最も重要なプロセスの1つとなり、その後、ビジネスと一体化しつつある</strong>
ということです。</p>

<p>これらのことは既に各方面の偉い人が唱えていることで、理論上は当たり前だと思うのですが、これを経験上私が感じれていることに
スティーブ・ジョブズ曰くの<a href="http://blogs.itmedia.co.jp/tooki/2010/04/connecting-the-.html">connecting the dots</a>を感じてちょっぴり嬉しいのです。
頭で理解したことと体験で会得したものでは実は雲泥の差だなと思いますので。</p>

<h1>ゴール思考とシステム思考の融合</h1>

<p><a href="http://blogs.itmedia.co.jp/tooki/2010/04/connecting-the-.html">connecting the dotsのリンク先の記事</a>に曰く、</p>

<blockquote><p>点と点を繋げるということは、あらかじめ仕込むことは出来ないということです。
しかし、振り返ってみると「あの時のことが役立った」とか、「あそこで出会った人に、こんなタイミングで助けられた」といったことって意外とあるものなんですよね。</p></blockquote>

<p>とあります。</p>

<p>私も自分の経験を振り返ってみて思うのですが、その通りだなと。
これ実はある意味<a href="http://www.a-kumahira.co.jp/fifth/system.html">「システム思考」</a>だな、ということを最近しみじみ感じます。
少なくとも予め仕込むことは出来ないという点においては、ゴール思考とは遠い気がします。</p>

<p>私実は11年間エンジニアやる前、1年くらい超ブラック企業と言われた某営業会社で営業をしていた時期が(一応)ありました。
この企業が物凄い体育会系ノリだったのと超絶ゴール思考的で理系出身だった私には全く考え方が合わず辛い思いをした苦い経験でした。
既に亡くなった(笑)会社でもう時効だから書いちゃいますけど、当時の上司から2回辞表書けって言われて書いたりして(笑)
1回目の辞表なんて「まだ辞めたくないけど上司に辞表書けって言われたので辞表書きました」という内容の辞表だったりして(笑)</p>

<p>今でこそ笑い話ですが、この経験が実は比較的ネガティブな原体験として、<strong>極端なゴール思考では歪みが生まれて持続可能な発展でなくなる</strong>
ということが自分の中に焼き付きました。その後も若干紆余曲折あったんですが、この体験が元になってエンジニアリングを1から勉強してエンジニアになろうと思えました。
当然ながらこの時はシステム思考なんて言葉も知る由もないんですが、振り返ってみれば、目の前の課題解決を積み重ねるアプローチを欲していたんだと思います。</p>

<p>また、実はゴール思考も適切な範囲であればモチベーションコントロールとして有効であることも体験していることも重要です。
システム思考だけだとビジネス上実現したいビジョン等から外れてしまっても暫く気付かないケースがあるように思います。
個人的には<strong>ゴール思考とシステム思考の融合を目指したい</strong>と考えています。私の体験上でもそれは理に適っていると思われるのです。</p>

<h1>ヒエラルキーとホラクラシー</h1>

<p>このような文脈にあってもう1つ私の中で良く考えることがあります。それはクリエイティブな組織の在り方についてです。
<a href="/blog/2015/01/22/new-type-organization/">私はその1つの解としてホラクラシー型組織の構築があるのではないか？と考えています。</a>
ホラクラシーとは、マネージャーの存在しないセルフ・マネジメント型組織のことで、ザッポスが導入したことで有名です。</p>

<iframe class="hatenablogcard" style="width:100%;height:155px;margin:15px 0;max-width:680px;" title="InterAction Green | ほんとうはこわい、ザッポス。ホラクラシーって何？" src="http://hatenablog.com/embed?url=http://www.interactiongreen.com/?p=864" frameborder="0" scrolling="no"></iframe>


<p>最近のハーバード・ビジネス・レビューにホラクラシーに関する記事がありました。</p>

<blockquote class="twitter-tweet" lang="ja"><p lang="ja" dir="ltr">ホラクラシーに懐疑的な視点。確かに現状の組織形態では合わない場面もあると思うけどクリエイティブな仕事は移行出来ると思う／管理職を置かない組織が理想なのか？ 導入前に自問すべき4つの質問 <a href="https://t.co/YY3L0RCtGn">https://t.co/YY3L0RCtGn</a> <a href="https://twitter.com/dhbr_japan">@dhbr_japan</a>さんから</p>&mdash; Tsutomu Chikuba (@tchikuba) <a href="https://twitter.com/tchikuba/status/672302472178720769">2015, 12月 3</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>この記事に曰く、</p>

<blockquote><p>ホラクラシーの大部分は、優れたマネジメントによく見られる要素を単に体系化していると気づいた。
ホラクラシーの導入にまつわる細部にとらわれず、それが何に対処するためのものなのかを掘り下げて考えれば、見えてくることがある。
問題は、ヒエラルキーそのものがいかに正当性を失ったかではなく、速まっている世の中の動向に対してヒエラルキーでは動きが遅れることなのだ。</p></blockquote>

<p>とあります。</p>

<p>確かにヒエラルキー型組織で優れたマネージャーは、出来るだけ現場に裁量を与えて信頼し、問題が発生した場合だけ出来るだけ迅速に対応し
問題の責任を取るタイプが多い気がします。極論、成功は部下の功績とし、失敗は上司(自分)の責任とするタイプですね。
まぁ体験的には大体ヒエラルキー型組織だと中間管理職層は人間が腐っていく例を良く見てきた気がしますが(笑)
私が開発マネージャーだった際にこういう優れたマネージャー像を目指して奮闘してましたが、理想像からは程遠い感じだったような気がします(汗)</p>

<p>いずれにしてもスピード感を持って変化に対して対応していく為には現場でコトに当たっている当人が誰かに判断を仰ぐことなく
自分の判断で臨機応変に行動することが出来てしかもその判断が正当であれば(結果がどうあれ)最も正しいと思います。
まぁ逆に振り返って判断が正当でないように第三者からは見えても、結果がマズい方向ではなく良い方向であればヨシとすることもあるかもしれません。</p>

<p>私は、クリエイティブな仕事に携わる人々が関わる組織が今のところ最も上手く行く方法論としてホラクラシーを捉えています。
逆に1ヶ月ほど前にバズってた、CIAのスパイマニュアルの記事がヒエラルキーの問題点を端的に表していると思いました。</p>

<blockquote class="twitter-tweet" lang="ja"><p lang="ja" dir="ltr">これは必見。まぁ組織が成熟してくるとこうなりがちなんだろうけど／CIAのスパイマニュアルに学ぶ「会社をダメにする11の行動様式」 <a href="https://t.co/RcLV7aNegb">https://t.co/RcLV7aNegb</a></p>&mdash; Tsutomu Chikuba (@tchikuba) <a href="https://twitter.com/tchikuba/status/662106316492709889">2015, 11月 5</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>曰く、</p>

<blockquote><p>会社内での組織的位置付けにこだわる。
これからしようとすることが、本当にその組織の権限内なのか、より上層部の決断を仰がなくてよいのか、といった疑問点を常に指摘する</p></blockquote>

<p>これとかまさに先ほど書いた現場の臨機応変な判断を阻害する真逆の論理で一見正当性が見えるので厄介なんですよね(苦笑)</p>

<h1><a href="https://kotobank.jp/word/%E4%B8%8D%E4%BA%8C-617901">「不二」</a>という視座から垣間見る21世紀のスタンダード</h1>

<p>ちょっとここまで書いた所で息切れしてきましたが(笑)そろそろ結論めいたことを書きたいと思います。
結局のところ私の体験という文脈の中でしか実感を持って判断出来ないと思っていまして、その意味では至極主観的極まりない話だということが前提ですが。
現時点での私の文脈(コンテキスト)では、これら一見相反するように見えるものが実は一体不可分である、ということです。</p>

<p>まず、ビジネス上使われる一部に過ぎなかったエンジニアリングが、経営の中心となりつつあります。
次に、極端なゴール思考の行き詰まりや矛盾から、持続可能な発展を考慮したゴール思考によるビジョンに基づいたシステム思考の重要性に気付きました。
最後に、ヒエラルキー型組織の矛盾の中でキラリと光るマネージャーを垣間見たり、理想像目指して奮闘したりするも、
マネージャーとなってコードを書かなくなったらエンジニアとして終わりなんじゃないかと自問自答して、
私自身の手でエンジニアのホラクラシー型組織を実現したいと夢見て現実と奮闘していたりします。</p>

<p>私の体験としては実は予期せず元いたコンテキストがあったからこそ、気付きを得たと言えますし、
対立しているように書いたことも実は存在意義が多分にあり一体不可分なのだと思えるのです。
これを代弁する考え方に仏教の用語で<a href="https://kotobank.jp/word/%E4%B8%8D%E4%BA%8C-617901">「不二(ふに)」</a>という言葉があります。</p>

<p>曰く、</p>

<blockquote><p>対立していて二元的に見える事柄も、絶対的な立場から見ると対立がなく一つのものであるということ。</p></blockquote>

<p>前述のような見方が絶対的な立場か否かは分かりません。</p>

<p>ただ、ヒエラルキー型組織でウォーターフォール型開発を一通り経験出来たからこそ、その長短を体得することができたのだと思います。
ビジネスと遠いところで開発をしていたからこそ、ビジネスに近接するところで開発する際の違いを痛感し開発プロセスを多少なりとも改善してきました。
そもそもホラクラシー型組織を上手く回す為にはセルフ・マネジメントが出来る優秀なメンバーのみで組織を構成する必要がありそうです。
職能的にジュニアクラスのメンバーは一向に力を発揮出来ないことになりそうですが、敢えてヒエラルキー型組織で力を付けるという選択肢もあるかもしれません。</p>

<p>これらを踏まえた上で、私自身の経験に即して、これからの時代以下のような流れになっていくのかなと考えています。</p>

<ul>
<li>事業会社の内製化により下請けも含めたSIerは斜陽産業化する。</li>
<li>事業会社がweb企業・インターネット企業となるのが当たり前になる。</li>
<li>新しいビジネスを起こす人はエンジニアの素養のあることが当たり前になる。</li>
<li>エンジニアの素養のある人が起業するので、エンジニアの評価がよりまともになり、まともなエンジニアがよりHappyになる。</li>
<li>非エンジニアの職種では徐々に人工知能や機械学習による自動化が進みよりクリエイティブな仕事をせざるを得ないようになる。</li>
<li>日頃ルーチンワークが辛いと言って仕事がつまらない思いをしている人は少なくなっていく。(仕事自体がなくなるので)</li>
<li>プログラミング教育が官民共に爆発的に広まる。</li>
<li>エンジニアの仕事はコーディングによってビジネス上の価値を創造することが評価のポイントになる。</li>
<li>世の中の複雑性は増していく一方で先が簡単に読めなくなり、反復型アプローチが問題解決の主流になる。</li>
<li>ある一定の人々に共感される極めて倫理的なビジョンを有するテックドリブンな企業が緩やかに受け入れられ世界を変えていく。</li>
<li>急進的なスタートアップより、持続可能な発展を掲げるスモールビジネスが大量に浸透していく。</li>
<li>副業やリモートワークがより普及して組織力は弱まり、クリエイティブな個人がクローズアップされる。</li>
<li>自律した働き方の出来るクリエイティブな個人が集まり、プロジェクト単位でギルド的集団を形成し、質の高い仕事を成し遂げる。</li>
<li>自律した働き方が出来るまでの職業訓練が比較的安価で受けられる教育的な仕組みが出来ていく。</li>
</ul>


<p>私自身はこれまでの経験を踏まえてやりたいことが比較的明確になりつつあるのですが、
キーワードは<strong>ITと新規事業と教育</strong>ということで一応一貫しているつもりなのでこの方向性は常に持ちつつ、
これまでのエンジニアとしての技術的な方向性から、更にビジネス・経営的な方向性で社会貢献出来る人材になろうと決意しています！</p>

<p><em>この記事は<a href="http://qiita.com/advent-calendar/2015/livesense_2">リブセンスアドベントカレンダー2015(その2)</a>の5日目です。</em></p>

<ul>
<li><em>4日目の記事：<a href="http://qiita.com/ma2saka/items/2cd6cb3a8007fdf9fe2e">Amazon LinuxでPHP7をソースからコンパイルしてSymfony3をMariaDB10</a></em></li>
<li><em>6日目の記事：<a href="http://qiita.com/stackline">stacklineさん</a></em></li>
</ul>

]]></content>
  </entry>
  
</feed>
